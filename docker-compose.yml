services:
  postgres:
    image: postgres:17.5-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pagespace
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pagespace"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.migrate
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/pagespace
      - PNPM_HOME=/usr/local/bin
    command: >
      sh -c "
        echo 'Starting database migrations...' &&
        pnpm run db:migrate &&
        echo 'Migrations complete, starting services...'
      "
    healthcheck:
      test: ["CMD", "echo", "Migration service healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - NEXT_PUBLIC_REALTIME_URL=${NEXT_PUBLIC_REALTIME_URL}
    ports:
      - "3000:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - file_storage:/app/storage
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/pagespace
      - NEXT_PUBLIC_REALTIME_URL=${NEXT_PUBLIC_REALTIME_URL}
      - FILE_STORAGE_PATH=/app/storage
      - PORT=3000
      - NODE_OPTIONS=--max-old-space-size=1024
    deploy:
      resources:
        limits:
          memory: 1280M

  realtime:
    build:
      context: .
      dockerfile: apps/realtime/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      migrate:
        condition: service_completed_successfully
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/pagespace
      - PORT=${REALTIME_PORT}
      - CORS_ORIGIN=${WEB_APP_URL}
    deploy:
      resources:
        limits:
          memory: 256M

  worker:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.worker
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - file_storage:/app/storage
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/pagespace
      - FILE_STORAGE_PATH=/app/storage
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=384
    deploy:
      resources:
        limits:
          memory: 512M
    restart: unless-stopped

volumes:
  postgres_data:
  file_storage: